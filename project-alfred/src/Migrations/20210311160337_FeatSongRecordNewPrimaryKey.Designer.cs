// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using project_alfred.models;

namespace project_alfred.Migrations
{
    [DbContext(typeof(SongRecordContext))]
    [Migration("20210311160337_FeatSongRecordNewPrimaryKey")]
    partial class FeatSongRecordNewPrimaryKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("project_alfred.models.FetchLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal>("LastMessage")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("User")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("FetchLog");
                });

            modelBuilder.Entity("project_alfred.models.SongRecord", b =>
                {
                    b.Property<decimal>("user")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("publishedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("url")
                        .HasColumnType("text");

                    b.HasKey("user", "publishedAt", "url");

                    b.ToTable("SongRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
